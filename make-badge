#!/bin/bash

# $ help set | grep "\-e"
#      -e  Exit immediately if a command exits with a non-zero status.
set -e

# REPO_NAME=standard.publiccode.net
REPO_NAME=$1
# BRANCH=main
BRANCH=$2

BADGE_LABEL="link check"

if grep '"passing"' ${REPO_NAME}-url-check-fails.json; then
	BADGE_COLOR=":green"
	BADGE_TEXT_STATUS="passing"
else
	BADGE_COLOR=":red"
	BADGE_TEXT_STATUS="failing"
fi
BADGE_TEXT="${BRANCH} ${BADGE_TEXT_STATUS}"

# ensure directory exists
mkdir -pv badges
# and that no file, or symlink, is already there
rm -f badges/${REPO_NAME}.svg

# create the header
cat > badges/${REPO_NAME}.head.svg <<EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- SPDX-License-Identifier: CC0-1.0 -->
<!-- SPDX-FileCopyrightText: 2023 The Foundation for Public Code <info@publiccode.net> -->
EOF

# create the body
./node_modules/.bin/badge \
	"${BADGE_LABEL}" \
	"${BADGE_TEXT}" \
	"${BADGE_COLOR}" \
	flat \
	> badges/${REPO_NAME}.body.svg

# combine the unformatted contents
cat	badges/${REPO_NAME}.head.svg \
	badges/${REPO_NAME}.body.svg \
	> badges/${REPO_NAME}.tmp.svg

# format for final output
xmllint --format badges/${REPO_NAME}.tmp.svg \
	--output badges/${REPO_NAME}.svg

rm badges/${REPO_NAME}.{tmp,head,body}.svg
ls -l badges/${REPO_NAME}.svg
